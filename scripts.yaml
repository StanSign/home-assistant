curtain_control:
  alias: Curtain Control
  sequence:
    - choose:
      - conditions:
          - condition: state
            entity_id: sensor.curtain
            state: 'Closed'
        sequence:
          - service: cover.close_cover
            entity_id: cover.curtain
      - conditions:
          - condition: state
            entity_id: sensor.curtain
            state: 'Open'
        sequence:
          - service: cover.open_cover
            entity_id: cover.curtain
      default: []
  mode: single
  icon: mdi:window-open-variant

morning_routine:
  alias: Gradually turn on Lights & open Curtain
  sequence:
    - repeat:
        while:
          - condition: state
            entity_id: input_boolean.morning_check
            state: 'off'
        sequence:
          - service: light.turn_on
            data_template:
              entity_id: group.light
              brightness: "{{ (states('input_number.morning_current_state') | int * 2.55) | round(1) }}"
          - service: cover.set_cover_position
            data_template:
              entity_id: cover.curtain
              position: "{{ states('input_number.morning_current_state') | int }}"
          - service: input_number.increment
            data:
              entity_id: input_number.morning_current_state
          - delay:
              minutes: 5
  mode: single
  icon: mdi:white-balance-sunny

my_computer_wake:
  alias: "My Computer - Wake"
  sequence:
    - service: wake_on_lan.send_magic_packet
      data:
        mac: !secret wol_mac_addr

my_computer_shutdown:
  alias: "My Computer - Shutdown"
  sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/hubline/stansign_win/commands/shutdown"
        payload: ""

my_computer_reboot:
  alias: "My Computer - Reboot"
  sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/hubline/stansign_win/commands/reboot"
        payload: ""

my_computer_vol_mute:
  alias: "My Computer - Toggle Mute"
  sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/hubline/stansign_win/commands/volume/mute"
        payload: ""

my_computer_vol_max:
  alias: "My Computer - Vol Max"
  sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/hubline/stansign_win/commands/volume/set"
        payload: "100"

my_computer_refresh:
  alias: "My Computer - Refresh"
  sequence:
    - service: mqtt.publish
      data:
        topic: "iotlink/hubline/stansign_win/refresh"
        payload: ""
